import {cn, formatDate} from '@/lib/utils'
import { EyeIcon } from 'lucide-react'
import {Button} from '@/components/ui/button'
import Link from 'next/link'
import Image from 'next/image'
import {Startup, Author} from '@/sanity/types'
import { Skeleton } from './ui/skeleton'


//this Omit is a ts fn, for creating type here, we no need to include the author in the Startup as there is the reference etc
//so Omit does is, it includes the first argument and excludes the second one. ie, Startup type(startuo schema de type(generated by us using sanity)) use cheyyum but athile author inte type consider cheyyilla
export type StartupTypeCard = Omit<Startup, "author"> & { author?: Author } //hence we set the type of author to the Author schema (hence only defines it, not clasjes author between Startup and Author)

const StartupCard = ({post}: {post: StartupTypeCard}) => {
    const {_createdAt,views,author,title,_id,category,image,description} = post
  return (
    <li className="startup-card group">
        <div className="flex-between">
            <p className="startup_card_date">
              {formatDate(_createdAt)} {/*here used the fn to fomrat the string type date into proper structured date */}
            </p>
            <div className="flex gap-1.5">
                {/*to show views */}
              <EyeIcon className="size-6 text-primary"/>
              <span className="text-16-medium">{views}</span>
            </div>
        </div>

        <div className='flex-between mt-5 gap-5'>
            <div className="flex-1">
                {/*to move to the author's user page */}
            <Link href={`/user/${author?._id}`}>
               <p className="text-16-medium line-clamp-1">
                {author?.name}
               </p>
            </Link>
            </div>
           
           {/*points to the startup details */}
            <Link href={`/startup/${_id}`}>
             <h3 className='text-26-semibold line-clamp-1'>
                {title}
             </h3>
            </Link>

           {/*profile image */}
            <Link href={`/user/${author?._id}`}>
               <Image src={author?.image || "/default-profile.png"} alt={author?.name || "Author profile"} width={48} height={48} className='rounded-full'/>
            </Link>
           </div>
                
            {/* for startup details */}
           <Link href={`/startup/${_id}`}> 
                 <p className="startup-card_desc"> 
                    {description}
                 </p>
                 <img src={image} alt='placeholder' className='startup-card_img'/>
           </Link>

        

        <div className="flex-between gap-3 mt-5">
            <Link href={`/?query={category.toLowerCase()}`}>
               <p className="text-16-medium">
                {category}
                </p> 
            </Link>
            <Button className='startup-card_btn' asChild>
              <Link href={`/startup/${_id}`}>
               Details
              </Link>
            </Button>
        </div>
    </li>
  )
}

//skeleton for showing while the divs are loading
export const StartupCardSkeleton = () =>(
  <>
  {[0,1,2,3,4].map((index:number)=>(
    <li key={cn("skeleton",index)}>
      <Skeleton className='startup-card_skeleton'/>
    </li>
  ))}
  </>
)

export default StartupCard